@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User)) // Verifica se o usuário está logado
    {
        <li class="nav-item">
            <!-- Link para a página de gerenciamento da conta -->
            <!-- Exibe uma saudação com o nome do usuário logado -->
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @User.Identity?.Name!
            </a>
        </li>
        <li class="nav-item">
            <!-- Formulário para realizar logout -->
            <!-- Usa um botão estilizado como link para submeter o logout -->
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else // Se o usuário não estiver autenticado
    {
        <li class="nav-item">
            <!-- Link para a página de registro -->
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <!-- Link para a página de login -->
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
